<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BatchesDataSet" targetNamespace="http://tempuri.org/BatchesDataSet.xsd" xmlns:mstns="http://tempuri.org/BatchesDataSet.xsd" xmlns="http://tempuri.org/BatchesDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="EngDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EngDBConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.EngCooperation.My.MySettings.GlobalReference.Default.EngDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BatchsTableAdapter" GeneratorDataComponentClassName="BatchsTableAdapter" Name="Batchs" UserDataComponentName="BatchsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectName="ENcooperationDB.dbo.Batchs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Batchs] WHERE (([AcountID] = @Original_AcountID) AND ([EngID] = @Original_EngID) AND ([BatchDate] = @Original_BatchDate) AND ([Total] = @Original_Total) AND ([Payed] = @Original_Payed) AND ((@IsNull_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)) AND ([Bid] = @Original_Bid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AcountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AcountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EngID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EngID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_BatchDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BatchDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Total" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Total" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Payed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Payed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Remark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Remark" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Remark" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Remark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Bid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Bid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Batchs] ([AcountID], [EngID], [BatchDate], [Total], [Payed], [Remark]) VALUES (@AcountID, @EngID, @BatchDate, @Total, @Payed, @Remark);
SELECT AcountID, EngID, BatchDate, Total, Payed, Remark, Bid FROM Batchs WHERE (Bid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AcountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AcountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EngID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EngID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@BatchDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BatchDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Total" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Total" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Payed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Payed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Remark" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Remark" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT AcountID, EngID, BatchDate, Total, Payed, Remark, Bid FROM Batchs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Batchs] SET [AcountID] = @AcountID, [EngID] = @EngID, [BatchDate] = @BatchDate, [Total] = @Total, [Payed] = @Payed, [Remark] = @Remark WHERE (([AcountID] = @Original_AcountID) AND ([EngID] = @Original_EngID) AND ([BatchDate] = @Original_BatchDate) AND ([Total] = @Original_Total) AND ([Payed] = @Original_Payed) AND ((@IsNull_Remark = 1 AND [Remark] IS NULL) OR ([Remark] = @Original_Remark)) AND ([Bid] = @Original_Bid));
SELECT AcountID, EngID, BatchDate, Total, Payed, Remark, Bid FROM Batchs WHERE (Bid = @Bid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AcountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AcountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EngID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EngID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@BatchDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BatchDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Total" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Total" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Payed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Payed" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Remark" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Remark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AcountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AcountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EngID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EngID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_BatchDate" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="BatchDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Total" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Total" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_Payed" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="Payed" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Remark" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Remark" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Remark" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Remark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Bid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Bid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Bid" ColumnName="Bid" DataSourceName="ENcooperationDB.dbo.Batchs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Bid" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Bid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AcountID" DataSetColumn="AcountID" />
              <Mapping SourceColumn="EngID" DataSetColumn="EngID" />
              <Mapping SourceColumn="BatchDate" DataSetColumn="BatchDate" />
              <Mapping SourceColumn="Total" DataSetColumn="Total" />
              <Mapping SourceColumn="Payed" DataSetColumn="Payed" />
              <Mapping SourceColumn="Remark" DataSetColumn="Remark" />
              <Mapping SourceColumn="Bid" DataSetColumn="Bid" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetDataBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Acounting.EngID, Acounting.AcountDate, Acounting.AcountStatus, Acounting.TotalRest, Acounting.Total, Batchs.Payed, SUM(Batchs.Total) 
                      AS TotalPayed, Acounting.AcountID
FROM         Acounting INNER JOIN
                      Batchs ON Acounting.AcountID = Batchs.AcountID
GROUP BY Acounting.EngID, Acounting.AcountDate, Acounting.AcountStatus, Acounting.TotalRest, Acounting.Total, Batchs.Payed, Acounting.AcountID
HAVING      (Acounting.AcountStatus = N'Cached') AND (Acounting.EngID = @EngID) AND (Acounting.TotalRest &gt; 0) AND (Batchs.Payed = 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="EngID" ColumnName="EngID" DataSourceName="ENcooperationDB.dbo.Acounting" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EngID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EngID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdatePayedTrue" Modifier="Public" Name="UpdatePayedTrue" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="UpdatePayedTrue">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE    Batchs
SET              Payed = 1
WHERE     (Bid = @BID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="BID" ColumnName="Bid" DataSourceName="ENcooperationDB.dbo.Batchs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Bid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EngRestTableTableAdapter" GeneratorDataComponentClassName="EngRestTableTableAdapter" Name="EngRestTable" UserDataComponentName="EngRestTableTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Acounting.EngID, Acounting.AcountDate, Acounting.AcountStatus, Acounting.TotalRest AS AcountTotalRest, Acounting.Total, Batchs.Payed, 
                      SUM(Batchs.Total) AS TotalPayed, Acounting.AcountID, EngCV.FullName, Acounting.Total - SUM(Batchs.Total) AS TotalRest
FROM         Acounting INNER JOIN
                      Batchs ON Acounting.AcountID = Batchs.AcountID INNER JOIN
                      EngCV ON Acounting.EngID = EngCV.EngID
GROUP BY Acounting.EngID, Acounting.AcountDate, Acounting.AcountStatus, Acounting.TotalRest, Acounting.Total, Batchs.Payed, Acounting.AcountID, 
                      EngCV.FullName
HAVING      (Acounting.AcountStatus = N'Cached') AND (Acounting.TotalRest &gt; 0) AND (Batchs.Payed = 1) AND (Acounting.EngID = @EngID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="EngID" ColumnName="EngID" DataSourceName="ENcooperationDB.dbo.Acounting" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EngID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EngID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EngID" DataSetColumn="EngID" />
              <Mapping SourceColumn="AcountDate" DataSetColumn="AcountDate" />
              <Mapping SourceColumn="AcountStatus" DataSetColumn="AcountStatus" />
              <Mapping SourceColumn="TotalRest" DataSetColumn="TotalRest" />
              <Mapping SourceColumn="Total" DataSetColumn="Total" />
              <Mapping SourceColumn="Payed" DataSetColumn="Payed" />
              <Mapping SourceColumn="TotalPayed" DataSetColumn="TotalPayed" />
              <Mapping SourceColumn="AcountID" DataSetColumn="AcountID" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="AcountTotalRest" DataSetColumn="AcountTotalRest" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByRest" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRest" GeneratorSourceName="FillByRest" GetMethodModifier="Public" GetMethodName="GetDataByRest" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRest" UserSourceName="FillByRest">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Acounting.EngID, Acounting.AcountStatus, Acounting.TotalRest, Acounting.Total, Batchs.Payed, Batchs.Total AS TotalPayed, Acounting.AcountID, 
                      EngCV.FullName, Batchs.BatchDate, Batchs.Bid, Acounting.AcountDate
FROM         Acounting INNER JOIN
                      Batchs ON Acounting.AcountID = Batchs.AcountID INNER JOIN
                      EngCV ON Acounting.EngID = EngCV.EngID
GROUP BY Acounting.EngID, Acounting.AcountStatus, Acounting.TotalRest, Acounting.Total, Batchs.Payed, Acounting.AcountID, EngCV.FullName, Batchs.Total, 
                      Batchs.BatchDate, Batchs.Bid, Acounting.AcountDate
HAVING      (Acounting.AcountStatus = N'Cached') AND (Acounting.TotalRest &gt; 0) AND (Batchs.Payed = 0)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DataReportRestTableAdapter" GeneratorDataComponentClassName="DataReportRestTableAdapter" Name="DataReportRest" UserDataComponentName="DataReportRestTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Acounting.EngID, Acounting.AcountStatus, Acounting.TotalRest AS AcountTotalRest, Acounting.Total, Batchs_1.Payed, Batchs_1.Total AS TotalPayed, 
                      Acounting.AcountID, EngCV.FullName, Batchs_1.BatchDate, Batchs_1.Bid, Acounting.AcountDate,
                          (SELECT     SUM(Total) AS Expr1
                             FROM         Batchs
                             WHERE     (Payed = 1) AND (Acounting.EngID = EngID)) AS TotalRest
FROM         Acounting INNER JOIN
                      Batchs AS Batchs_1 ON Acounting.AcountID = Batchs_1.AcountID INNER JOIN
                      EngCV ON Acounting.EngID = EngCV.EngID
GROUP BY Acounting.EngID, Acounting.AcountStatus, Acounting.TotalRest, Acounting.Total, Batchs_1.Payed, Acounting.AcountID, EngCV.FullName, 
                      Batchs_1.Total, Batchs_1.BatchDate, Batchs_1.Bid, Acounting.AcountDate
HAVING      (Acounting.AcountStatus = N'Cached') AND (Acounting.TotalRest &gt; 0) AND (Batchs_1.Payed = 0)</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EngID" DataSetColumn="EngID" />
              <Mapping SourceColumn="AcountStatus" DataSetColumn="AcountStatus" />
              <Mapping SourceColumn="TotalRest" DataSetColumn="TotalRest" />
              <Mapping SourceColumn="Total" DataSetColumn="Total" />
              <Mapping SourceColumn="Payed" DataSetColumn="Payed" />
              <Mapping SourceColumn="TotalPayed" DataSetColumn="TotalPayed" />
              <Mapping SourceColumn="AcountID" DataSetColumn="AcountID" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="BatchDate" DataSetColumn="BatchDate" />
              <Mapping SourceColumn="Bid" DataSetColumn="Bid" />
              <Mapping SourceColumn="AcountDate" DataSetColumn="AcountDate" />
              <Mapping SourceColumn="AcountTotalRest" DataSetColumn="AcountTotalRest" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdatePayedTrue" Modifier="Public" Name="UpdatePayedTrue" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="UpdatePayedTrue">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE    Batchs
SET              Payed = 1
WHERE     (Bid = @BID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="BID" ColumnName="Bid" DataSourceName="ENcooperationDB.dbo.Batchs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Bid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectName="SELECT EngCV.EngID, EngCV.FullName, Acounting.AcountID, Acounting.AcountDate, Acounting.AcountStatus FROM Acounting INNER JOIN EngCV ON Acounting.EngID = EngCV.EngID WHERE (Acounting.AcountStatus = N'Cached')" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="QryMaxDateByIDorName" MethodsParameterType="CLR" Modifier="Public" Name="QryMaxDateByIDorName" QueryType="Scalar" ScalarCallRetval="System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="QryMaxDateByIDorName">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT     MAX(AcountDate) AS MaxDate, EngID, FullName
FROM         (SELECT     EngCV.EngID, EngCV.FullName, Acounting.AcountID, Acounting.AcountDate, Acounting.AcountStatus
                        FROM         Acounting INNER JOIN
                                              EngCV ON Acounting.EngID = EngCV.EngID
                        WHERE     (Acounting.AcountStatus = N'Cached')) AS derivedtbl_1
GROUP BY EngID, FullName
HAVING      (EngID = @EngID) OR
                      (FullName = @FullName)</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="EngID" ColumnName="EngID" DataSourceName="SELECT EngCV.EngID, EngCV.FullName, Acounting.AcountID, Acounting.AcountDate, Acounting.AcountStatus FROM Acounting INNER JOIN EngCV ON Acounting.EngID = EngCV.EngID WHERE (Acounting.AcountStatus = N'Cached')" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EngID" Precision="0" Scale="0" Size="4" SourceColumn="EngID" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="FullName" ColumnName="FullName" DataSourceName="SELECT EngCV.EngID, EngCV.FullName, Acounting.AcountID, Acounting.AcountDate, Acounting.AcountStatus FROM Acounting INNER JOIN EngCV ON Acounting.EngID = EngCV.EngID WHERE (Acounting.AcountStatus = N'Cached')" DataTypeServer="nvarchar(62)" DbType="String" Direction="Input" ParameterName="@FullName" Precision="0" Scale="0" Size="62" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="EngDBConnectionString (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="QryEngRest" MethodsParameterType="CLR" Modifier="Public" Name="QryEngRest" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="QryEngRest">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT     Acounting.EngID, Acounting.AcountDate, Acounting.AcountStatus, Acounting.TotalRest, Acounting.Total, Batchs.Payed, SUM(Batchs.Total) 
                      AS TotalPayed, Acounting.AcountID
FROM         Acounting INNER JOIN
                      Batchs ON Acounting.AcountID = Batchs.AcountID
GROUP BY Acounting.EngID, Acounting.AcountDate, Acounting.AcountStatus, Acounting.TotalRest, Acounting.Total, Batchs.Payed, Acounting.AcountID
HAVING      (Acounting.AcountStatus = N'Cached') AND (Acounting.EngID = @EngID) AND (Acounting.TotalRest &gt; 0) AND (Batchs.Payed = 1)</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="EngID" ColumnName="EngID" DataSourceName="ENcooperationDB.dbo.Acounting" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@EngID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EngID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BatchesDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="BatchesDataSet" msprop:Generator_UserDSName="BatchesDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Batchs" msprop:Generator_TableClassName="BatchsDataTable" msprop:Generator_TableVarName="tableBatchs" msprop:Generator_TablePropName="Batchs" msprop:Generator_RowDeletingName="BatchsRowDeleting" msprop:Generator_UserTableName="Batchs" msprop:Generator_RowChangingName="BatchsRowChanging" msprop:Generator_RowEvHandlerName="BatchsRowChangeEventHandler" msprop:Generator_RowDeletedName="BatchsRowDeleted" msprop:Generator_RowEvArgName="BatchsRowChangeEvent" msprop:Generator_RowChangedName="BatchsRowChanged" msprop:Generator_RowClassName="BatchsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AcountID" msprop:Generator_ColumnVarNameInTable="columnAcountID" msprop:Generator_ColumnPropNameInRow="AcountID" msprop:Generator_ColumnPropNameInTable="AcountIDColumn" msprop:Generator_UserColumnName="AcountID" type="xs:int" />
              <xs:element name="EngID" msprop:Generator_ColumnVarNameInTable="columnEngID" msprop:Generator_ColumnPropNameInRow="EngID" msprop:Generator_ColumnPropNameInTable="EngIDColumn" msprop:Generator_UserColumnName="EngID" type="xs:int" />
              <xs:element name="BatchDate" msprop:Generator_ColumnVarNameInTable="columnBatchDate" msprop:Generator_ColumnPropNameInRow="BatchDate" msprop:Generator_ColumnPropNameInTable="BatchDateColumn" msprop:Generator_UserColumnName="BatchDate" type="xs:dateTime" />
              <xs:element name="Total" msprop:Generator_ColumnVarNameInTable="columnTotal" msprop:Generator_ColumnPropNameInRow="Total" msprop:Generator_ColumnPropNameInTable="TotalColumn" msprop:Generator_UserColumnName="Total" type="xs:decimal" />
              <xs:element name="Payed" msprop:Generator_ColumnVarNameInTable="columnPayed" msprop:Generator_ColumnPropNameInRow="Payed" msprop:Generator_ColumnPropNameInTable="PayedColumn" msprop:Generator_UserColumnName="Payed" type="xs:boolean" />
              <xs:element name="Remark" msprop:Generator_ColumnVarNameInTable="columnRemark" msprop:Generator_ColumnPropNameInRow="Remark" msprop:Generator_ColumnPropNameInTable="RemarkColumn" msprop:Generator_UserColumnName="Remark" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Bid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="1" msprop:Generator_ColumnVarNameInTable="columnBid" msprop:Generator_ColumnPropNameInRow="Bid" msprop:Generator_ColumnPropNameInTable="BidColumn" msprop:Generator_UserColumnName="Bid" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EngRestTable" msprop:Generator_TableClassName="EngRestTableDataTable" msprop:Generator_TableVarName="tableEngRestTable" msprop:Generator_TablePropName="EngRestTable" msprop:Generator_RowDeletingName="EngRestTableRowDeleting" msprop:Generator_UserTableName="EngRestTable" msprop:Generator_RowChangingName="EngRestTableRowChanging" msprop:Generator_RowEvHandlerName="EngRestTableRowChangeEventHandler" msprop:Generator_RowDeletedName="EngRestTableRowDeleted" msprop:Generator_RowEvArgName="EngRestTableRowChangeEvent" msprop:Generator_RowChangedName="EngRestTableRowChanged" msprop:Generator_RowClassName="EngRestTableRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EngID" msprop:Generator_ColumnVarNameInTable="columnEngID" msprop:Generator_ColumnPropNameInRow="EngID" msprop:Generator_ColumnPropNameInTable="EngIDColumn" msprop:Generator_UserColumnName="EngID" type="xs:int" />
              <xs:element name="AcountDate" msprop:Generator_ColumnVarNameInTable="columnAcountDate" msprop:Generator_ColumnPropNameInRow="AcountDate" msprop:Generator_ColumnPropNameInTable="AcountDateColumn" msprop:Generator_UserColumnName="AcountDate" type="xs:dateTime" />
              <xs:element name="AcountStatus" msprop:Generator_ColumnVarNameInTable="columnAcountStatus" msprop:Generator_ColumnPropNameInRow="AcountStatus" msprop:Generator_ColumnPropNameInTable="AcountStatusColumn" msprop:Generator_UserColumnName="AcountStatus">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TotalRest" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnTotalRest" msprop:Generator_ColumnPropNameInRow="TotalRest" msprop:Generator_ColumnPropNameInTable="TotalRestColumn" msprop:Generator_UserColumnName="TotalRest" type="xs:decimal" minOccurs="0" />
              <xs:element name="Total" msprop:Generator_ColumnVarNameInTable="columnTotal" msprop:Generator_ColumnPropNameInRow="Total" msprop:Generator_ColumnPropNameInTable="TotalColumn" msprop:Generator_UserColumnName="Total" type="xs:decimal" />
              <xs:element name="Payed" msprop:Generator_ColumnVarNameInTable="columnPayed" msprop:Generator_ColumnPropNameInRow="Payed" msprop:Generator_ColumnPropNameInTable="PayedColumn" msprop:Generator_UserColumnName="Payed" type="xs:boolean" />
              <xs:element name="TotalPayed" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnTotalPayed" msprop:Generator_ColumnPropNameInRow="TotalPayed" msprop:Generator_ColumnPropNameInTable="TotalPayedColumn" msprop:Generator_UserColumnName="TotalPayed" type="xs:decimal" minOccurs="0" />
              <xs:element name="AcountID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnAcountID" msprop:Generator_ColumnPropNameInRow="AcountID" msprop:Generator_ColumnPropNameInTable="AcountIDColumn" msprop:Generator_UserColumnName="AcountID" type="xs:int" />
              <xs:element name="FullName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="62" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AcountTotalRest" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnAcountTotalRest" msprop:Generator_ColumnPropNameInRow="AcountTotalRest" msprop:Generator_ColumnPropNameInTable="AcountTotalRestColumn" msprop:Generator_UserColumnName="AcountTotalRest" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DataReportRest" msprop:Generator_TableClassName="DataReportRestDataTable" msprop:Generator_TableVarName="tableDataReportRest" msprop:Generator_TablePropName="DataReportRest" msprop:Generator_RowDeletingName="DataReportRestRowDeleting" msprop:Generator_UserTableName="DataReportRest" msprop:Generator_RowChangingName="DataReportRestRowChanging" msprop:Generator_RowEvHandlerName="DataReportRestRowChangeEventHandler" msprop:Generator_RowDeletedName="DataReportRestRowDeleted" msprop:Generator_RowEvArgName="DataReportRestRowChangeEvent" msprop:Generator_RowChangedName="DataReportRestRowChanged" msprop:Generator_RowClassName="DataReportRestRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EngID" msprop:Generator_ColumnVarNameInTable="columnEngID" msprop:Generator_ColumnPropNameInRow="EngID" msprop:Generator_ColumnPropNameInTable="EngIDColumn" msprop:Generator_UserColumnName="EngID" type="xs:int" />
              <xs:element name="AcountStatus" msprop:Generator_ColumnVarNameInTable="columnAcountStatus" msprop:Generator_ColumnPropNameInRow="AcountStatus" msprop:Generator_ColumnPropNameInTable="AcountStatusColumn" msprop:Generator_UserColumnName="AcountStatus">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TotalRest" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnTotalRest" msprop:Generator_ColumnPropNameInRow="TotalRest" msprop:Generator_ColumnPropNameInTable="TotalRestColumn" msprop:Generator_UserColumnName="TotalRest" type="xs:decimal" minOccurs="0" />
              <xs:element name="Total" msprop:Generator_ColumnVarNameInTable="columnTotal" msprop:Generator_ColumnPropNameInRow="Total" msprop:Generator_ColumnPropNameInTable="TotalColumn" msprop:Generator_UserColumnName="Total" type="xs:decimal" />
              <xs:element name="Payed" msprop:Generator_ColumnVarNameInTable="columnPayed" msprop:Generator_ColumnPropNameInRow="Payed" msprop:Generator_ColumnPropNameInTable="PayedColumn" msprop:Generator_UserColumnName="Payed" type="xs:boolean" />
              <xs:element name="TotalPayed" msprop:Generator_ColumnVarNameInTable="columnTotalPayed" msprop:Generator_ColumnPropNameInRow="TotalPayed" msprop:Generator_ColumnPropNameInTable="TotalPayedColumn" msprop:Generator_UserColumnName="TotalPayed" type="xs:decimal" />
              <xs:element name="AcountID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnAcountID" msprop:Generator_ColumnPropNameInRow="AcountID" msprop:Generator_ColumnPropNameInTable="AcountIDColumn" msprop:Generator_UserColumnName="AcountID" type="xs:int" />
              <xs:element name="FullName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_UserColumnName="FullName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="62" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BatchDate" msprop:Generator_ColumnVarNameInTable="columnBatchDate" msprop:Generator_ColumnPropNameInRow="BatchDate" msprop:Generator_ColumnPropNameInTable="BatchDateColumn" msprop:Generator_UserColumnName="BatchDate" type="xs:dateTime" />
              <xs:element name="Bid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnBid" msprop:Generator_ColumnPropNameInRow="Bid" msprop:Generator_ColumnPropNameInTable="BidColumn" msprop:Generator_UserColumnName="Bid" type="xs:int" />
              <xs:element name="AcountDate" msprop:Generator_ColumnVarNameInTable="columnAcountDate" msprop:Generator_ColumnPropNameInRow="AcountDate" msprop:Generator_ColumnPropNameInTable="AcountDateColumn" msprop:Generator_UserColumnName="AcountDate" type="xs:dateTime" />
              <xs:element name="AcountTotalRest" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnAcountTotalRest" msprop:Generator_ColumnPropNameInRow="AcountTotalRest" msprop:Generator_ColumnPropNameInTable="AcountTotalRestColumn" msprop:Generator_UserColumnName="AcountTotalRest" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Batchs" />
      <xs:field xpath="mstns:Bid" />
    </xs:unique>
  </xs:element>
</xs:schema>